kafka作为一个存储系统：写到Kafka的数据被写进硬盘，并被复制多份用于容错。kafka允许生产者等待确认，直到所有的副本
都写完成之后返回确认，写操作才算完成。
Kafka使用的硬盘结构扩展性非常好---不管服务器上持久化的数据是50KB还是50TB，Kafka的性能差不多。
由于重视存储并允许客户端控制读取的位置，因此可以认为Kafka是一种专用的分布式文件系统，用于高性能，低延迟
日志存储，复制和传播。

Kafka用于流处理：只是读写和存储数据流还不够，目的是可以进行实时的流处理。
在Kafka中，一个流处理器从input topic获取连续的数据流，对这些输入做一些处理，之后产生连续的数据流到output topic。

网络：Kafka使用Tcp之上的二进制协议。协议定义所有的API作为请求响应消息对。所有的消息都是以大小分隔，并由
下面的基本类型组成。
客户端开启一个socket连接，之后写请求消息序列并读取对应的响应消息。在连接和断开连接时不需要握手请求。
保持连接开启用于更多请求更好，可以降低tcp多次握手。
客户端可能需要维护一个对多个broker的连接。因为数据是分片的。然而不需要对一个broker维护多个连接（也就是连接池）
服务器保证在单个TCP连接上，请求是有序处理的，响应也是有序的。客户端可以使用非阻塞IO实现请求分发来获取
高吞吐量。也就是客户端即使在等待之前请求的响应信息时依然可以发送新的请求。因为新的请求会在OS socket buffer中。
服务端可以配置请求大小，超过规定大小的请求会导致socket断开连接。

分片和引导：Kafka是一个分片系统。因此不是所有的服务器都有完整的数据集。
