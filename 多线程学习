线程池做的工作主要是控制运行的线程的数量，处理过程中将任务放入队列，然后在线程创建后启动这些任务，如果线程数量超过了
最大数量，超出数量的线程排队等候，等其他线程执行完毕，再从队列中取出任务来执行。

主要特点为：线程复用，控制最大并发数，管理线程

第一：降低资源消耗。通过重复利用已创建的线程降低线程创建和销毁造成的消耗。
第二：提高响应速度。当任务到达时，任务可以不需要等到线程创建就能立即执行。
第三：提高线程的可管理性，线程是稀缺资源，如果无限制的创建，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以
进行统一的分配，调优和监控。

线程优化：
1.	CPU密集型任务配置尽可能小的线程，建议Ncpu+1个。
2.	IO密集型任务，线程多数在等待，配置尽可能多的线程，建议2*Ncpu。
3.	不建议maxPoolSize设置的过大，多开线程解决不了问题，加大CPU管理负担。
4.	超时时间不必过长，加大下游负担。
日志异步：
线上由于用户基数大，产生的日志量也大，如果没对日志进行异步写处理，会导致这一块会耗费大量的资源在IO上，所以日志异步队列化，也是提升系统性能的必不可少的。
DB优化：
DB的优化主要体现在慢查询的优化

